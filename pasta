#!/bin/bash
# pasta

# Switch to repo directory so we can use .env
cd "$(dirname "$(readlink -f "$0")")" || exit 1

# Check .env exists
filename=".env"
if [ ! -f "$filename" ]; then
    echo -e ".env file not found!\nTo configure pasta and run this command:\n\ncp .env.example .env\n\nThen edit .env with a text editor to include your hosting domain and Auth Token from zipline!"
    exit 1
fi

# Get and set .env environment variables.
source .env

# Ensure proper api url formatting
if [[ "${url}" != */ ]]; then
  url=${url}/
fi

# Append api endpoint to url
url=${url}api/upload

# API endpoint and headers
authorization_token=${authtoken}

# Sending the request using curl and capturing the response
curl_command_line=$(curl -sS --fail -X POST -H "Authorization: $authorization_token" \
                        -H "Format: random" \
                        -H "Original-Name: true" \
                        -F "file=@$1" \
                        $url)
response=$curl_command_line
curl_exit_code=$?
if [ $curl_exit_code -ne 0 ]; then
  echo "Error: curl command failed with exit code $curl_exit_code. This may be due to an invalid URL, network issue, or the file being too large."
  exit 1
fi
if [ -z "$response" ]; then
  echo "Error: Received an empty response from '$url'. The file may be too large to process."
  exit 1
fi

# just the URL from the JSON response
file_url=$(echo "$response" | jq -r '.files[0]')
echo $file_url
